<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sensenets.sinopec.buiness.dao.one.MobileCollectTaskMapper">
    <resultMap id="BaseResultMap" type="com.sensenets.sinopec.buiness.model.one.MobileCollectTask">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="collect_repo_id" jdbcType="VARCHAR" property="collectRepoId" />
        <result column="oil_station_repo_id" jdbcType="VARCHAR" property="oilStationRepoId" />
        <result column="collect_start_time" jdbcType="TIMESTAMP" property="collectStartTime" />
        <result column="collect_end_time" jdbcType="TIMESTAMP" property="collectEndTime" />
        <result column="type" jdbcType="SMALLINT" property="type" />
        <result column="uts" jdbcType="TIMESTAMP" property="uts" />
        <result column="ts" jdbcType="BIGINT" property="ts" />
        <result column="user_id" jdbcType="VARCHAR" property="userId" />
        <result column="task_status" jdbcType="SMALLINT" property="taskStatus" />
        <result column="status" jdbcType="SMALLINT" property="status" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, collect_repo_id, oil_station_repo_id, collect_start_time, collect_end_time, type, 
        uts, ts, user_id, task_status, status
    </sql>
    <select id="selectByExample" parameterType="com.sensenets.sinopec.buiness.model.one.MobileCollectTaskCriteria" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from "public"."mobile_collect_task"
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from "public"."mobile_collect_task"
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from "public"."mobile_collect_task"
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.sensenets.sinopec.buiness.model.one.MobileCollectTaskCriteria">
        delete from "public"."mobile_collect_task"
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    
    <update id="updateBatchStatusByPrimaryKey" > 
	  update "public"."mobile_collect_task"  
	  set  
	  status = #{status,jdbcType=SMALLINT}
	  where id in
	   <foreach separator="," index="index" item="item" collection="ids" close=")" open="("> 
	     #{item}
	  </foreach> 
    </update>
    
    
    
    <insert id="insert" parameterType="com.sensenets.sinopec.buiness.model.one.MobileCollectTask">
        
        insert into "public"."mobile_collect_task" (collect_repo_id, oil_station_repo_id, 
            collect_start_time, collect_end_time, 
            type, uts, ts, 
            user_id, task_status, status
            )
        values (#{collectRepoId,jdbcType=VARCHAR}, #{oilStationRepoId,jdbcType=VARCHAR}, 
            #{collectStartTime,jdbcType=TIMESTAMP}, #{collectEndTime,jdbcType=TIMESTAMP}, 
            #{type,jdbcType=SMALLINT}, #{uts,jdbcType=TIMESTAMP}, #{ts,jdbcType=BIGINT}, 
            #{userId,jdbcType=VARCHAR}, #{taskStatus,jdbcType=SMALLINT}, #{status,jdbcType=SMALLINT}
            )
    </insert>
    <insert id="insertSelective" parameterType="com.sensenets.sinopec.buiness.model.one.MobileCollectTask">
       
        insert into "public"."mobile_collect_task"
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="collectRepoId != null">
                collect_repo_id,
            </if>
            <if test="oilStationRepoId != null">
                oil_station_repo_id,
            </if>
            <if test="collectStartTime != null">
                collect_start_time,
            </if>
            <if test="collectEndTime != null">
                collect_end_time,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="uts != null">
                uts,
            </if>
            <if test="ts != null">
                ts,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="taskStatus != null">
                task_status,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="collectRepoId != null">
                #{collectRepoId,jdbcType=VARCHAR},
            </if>
            <if test="oilStationRepoId != null">
                #{oilStationRepoId,jdbcType=VARCHAR},
            </if>
            <if test="collectStartTime != null">
                #{collectStartTime,jdbcType=TIMESTAMP},
            </if>
            <if test="collectEndTime != null">
                #{collectEndTime,jdbcType=TIMESTAMP},
            </if>
            <if test="type != null">
                #{type,jdbcType=SMALLINT},
            </if>
            <if test="uts != null">
                #{uts,jdbcType=TIMESTAMP},
            </if>
            <if test="ts != null">
                #{ts,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="taskStatus != null">
                #{taskStatus,jdbcType=SMALLINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=SMALLINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.sensenets.sinopec.buiness.model.one.MobileCollectTaskCriteria" resultType="java.lang.Long">
        select count(*) from "public"."mobile_collect_task"
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update "public"."mobile_collect_task"
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.collectRepoId != null">
                collect_repo_id = #{record.collectRepoId,jdbcType=VARCHAR},
            </if>
            <if test="record.oilStationRepoId != null">
                oil_station_repo_id = #{record.oilStationRepoId,jdbcType=VARCHAR},
            </if>
            <if test="record.collectStartTime != null">
                collect_start_time = #{record.collectStartTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.collectEndTime != null">
                collect_end_time = #{record.collectEndTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=SMALLINT},
            </if>
            <if test="record.uts != null">
                uts = #{record.uts,jdbcType=TIMESTAMP},
            </if>
            <if test="record.ts != null">
                ts = #{record.ts,jdbcType=BIGINT},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=VARCHAR},
            </if>
            <if test="record.taskStatus != null">
                task_status = #{record.taskStatus,jdbcType=SMALLINT},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=SMALLINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update "public"."mobile_collect_task"
        set id = #{record.id,jdbcType=BIGINT},
            collect_repo_id = #{record.collectRepoId,jdbcType=VARCHAR},
            oil_station_repo_id = #{record.oilStationRepoId,jdbcType=VARCHAR},
            collect_start_time = #{record.collectStartTime,jdbcType=TIMESTAMP},
            collect_end_time = #{record.collectEndTime,jdbcType=TIMESTAMP},
            type = #{record.type,jdbcType=SMALLINT},
            uts = #{record.uts,jdbcType=TIMESTAMP},
            ts = #{record.ts,jdbcType=BIGINT},
            user_id = #{record.userId,jdbcType=VARCHAR},
            task_status = #{record.taskStatus,jdbcType=SMALLINT},
            status = #{record.status,jdbcType=SMALLINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.sensenets.sinopec.buiness.model.one.MobileCollectTask">
        update "public"."mobile_collect_task"
        <set>
            <if test="collectRepoId != null">
                collect_repo_id = #{collectRepoId,jdbcType=VARCHAR},
            </if>
            <if test="oilStationRepoId != null">
                oil_station_repo_id = #{oilStationRepoId,jdbcType=VARCHAR},
            </if>
            <if test="collectStartTime != null">
                collect_start_time = #{collectStartTime,jdbcType=TIMESTAMP},
            </if>
            <if test="collectEndTime != null">
                collect_end_time = #{collectEndTime,jdbcType=TIMESTAMP},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=SMALLINT},
            </if>
            <if test="uts != null">
                uts = #{uts,jdbcType=TIMESTAMP},
            </if>
            <if test="ts != null">
                ts = #{ts,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="taskStatus != null">
                task_status = #{taskStatus,jdbcType=SMALLINT},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=SMALLINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.sensenets.sinopec.buiness.model.one.MobileCollectTask">
        update "public"."mobile_collect_task"
        set collect_repo_id = #{collectRepoId,jdbcType=VARCHAR},
            oil_station_repo_id = #{oilStationRepoId,jdbcType=VARCHAR},
            collect_start_time = #{collectStartTime,jdbcType=TIMESTAMP},
            collect_end_time = #{collectEndTime,jdbcType=TIMESTAMP},
            type = #{type,jdbcType=SMALLINT},
            uts = #{uts,jdbcType=TIMESTAMP},
            ts = #{ts,jdbcType=BIGINT},
            user_id = #{userId,jdbcType=VARCHAR},
            task_status = #{taskStatus,jdbcType=SMALLINT},
            status = #{status,jdbcType=SMALLINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>