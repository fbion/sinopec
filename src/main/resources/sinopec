#!/bin/sh
project=sinopec
jarpath=/home/sinopec-release-final
jarname=sinopec-release.jar
#引入依赖类库到类路径    
cd /home/sinopec-release-final
export CLASSPATH=.   
for jardir in `ls lib/*.jar`   
do  
   CLASSPATH=$CLASSPATH:$jardir      
done   
export CLASSPATH=$CLASSPATH


now=$(date +%Y%m%d)
log_file_dir="${jarpath}/logs"
log_file_url="$log_file_dir/$project.log"
command="java -server -Dfile.encoding=UTF-8 -Duser.timezone=GMT+08 -Xms128m -Xmx2048m -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:+HeapDumpOnOutOfMemoryError -XX:+PrintGCDateStamps -XX:+PrintGCDetails -verbose:gc -Xloggc:gc.log -cp $CLASSPATH -jar $jarpath/$jarname  --spring.config.location=classpath:/application.properties   "

if [ ! -x $log_file_dir ] 
 then
    mkdir -p  $log_file_dir
fi
if [ ! -f $log_file_url ]  
 then
	touch $log_file_url 
fi
start(){
	proStartCount=`jps | grep $jarname |wc -l` ;
    if [  $proStartCount -eq 0 ] 
	  then
		if [ "$log_file_url" != "" ] 
		 then
          exec $command  > "$log_file_url" &
          echo "$project started "
        else
          exec $command &
          echo "$project started "
        fi
    else
        echo "$project already started"
    fi 
    
}

stop(){  

 ps -ef | grep $jarname | grep -v grep | awk '{print $2}' | xargs kill -9
        echo "$project stopped "
}

status(){  
 proCount=`jps | grep $jarname |wc -l` ;
	if [ $proCount -eq 0 ] 
	  then
		echo "$project is not running"
	else
        echo "$project is running"
	fi 
}


case "$1" in  
start)  
start
sleep 1s
status   
;;  
stop)  
stop
sleep 1s
status   
;; 
status)  
status  
;;   
restart)  
stop
sleep 1s  
start
sleep 1s
status  
;;   
*)  
printf 'Usage: %s {start|stop|restart|status}\n' "$prog"  
exit 1  
;;  
esac