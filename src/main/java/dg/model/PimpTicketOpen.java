// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pimpTicketOpen.proto

package dg.model;

public final class PimpTicketOpen {
  private PimpTicketOpen() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   *开票事件操作类型
   * </pre>
   *
   * Protobuf enum {@code dg.model.TicketOpenEventType}
   */
  public enum TicketOpenEventType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>Ticket_Open_Event_Type_Unknown = 0;</code>
     */
    Ticket_Open_Event_Type_Unknown(0),
    /**
     * <pre>
     *加油卡开票
     * </pre>
     *
     * <code>Ticket_Open_Event_Type_1 = 1;</code>
     */
    Ticket_Open_Event_Type_1(1),
    /**
     * <pre>
     *现金油品开票
     * </pre>
     *
     * <code>Ticket_Open_Event_Type_2 = 2;</code>
     */
    Ticket_Open_Event_Type_2(2),
    /**
     * <code>Ticket_Open_Event_Type_3 = 3;</code>
     */
    Ticket_Open_Event_Type_3(3),
    /**
     * <pre>
     *ERP开票
     * </pre>
     *
     * <code>Ticket_Open_Event_Type_4 = 4;</code>
     */
    Ticket_Open_Event_Type_4(4),
    /**
     * <pre>
     *非油品POS零售开票
     * </pre>
     *
     * <code>Ticket_Open_Event_Type_5 = 5;</code>
     */
    Ticket_Open_Event_Type_5(5),
    /**
     * <pre>
     *非油品WebPos零售开票
     * </pre>
     *
     * <code>Ticket_Open_Event_Type_6 = 6;</code>
     */
    Ticket_Open_Event_Type_6(6),
    /**
     * <pre>
     *非油品团购开票
     * </pre>
     *
     * <code>Ticket_Open_Event_Type_7 = 7;</code>
     */
    Ticket_Open_Event_Type_7(7),
    /**
     * <pre>
     *电子商务开票
     * </pre>
     *
     * <code>Ticket_Open_Event_Type_8 = 8;</code>
     */
    Ticket_Open_Event_Type_8(8),
    /**
     * <pre>
     *充值卡开票
     * </pre>
     *
     * <code>Ticket_Open_Event_Type_9 = 9;</code>
     */
    Ticket_Open_Event_Type_9(9),
    /**
     * <pre>
     *增值税开票
     * </pre>
     *
     * <code>Ticket_Open_Event_Type_10 = 10;</code>
     */
    Ticket_Open_Event_Type_10(10),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>Ticket_Open_Event_Type_Unknown = 0;</code>
     */
    public static final int Ticket_Open_Event_Type_Unknown_VALUE = 0;
    /**
     * <pre>
     *加油卡开票
     * </pre>
     *
     * <code>Ticket_Open_Event_Type_1 = 1;</code>
     */
    public static final int Ticket_Open_Event_Type_1_VALUE = 1;
    /**
     * <pre>
     *现金油品开票
     * </pre>
     *
     * <code>Ticket_Open_Event_Type_2 = 2;</code>
     */
    public static final int Ticket_Open_Event_Type_2_VALUE = 2;
    /**
     * <code>Ticket_Open_Event_Type_3 = 3;</code>
     */
    public static final int Ticket_Open_Event_Type_3_VALUE = 3;
    /**
     * <pre>
     *ERP开票
     * </pre>
     *
     * <code>Ticket_Open_Event_Type_4 = 4;</code>
     */
    public static final int Ticket_Open_Event_Type_4_VALUE = 4;
    /**
     * <pre>
     *非油品POS零售开票
     * </pre>
     *
     * <code>Ticket_Open_Event_Type_5 = 5;</code>
     */
    public static final int Ticket_Open_Event_Type_5_VALUE = 5;
    /**
     * <pre>
     *非油品WebPos零售开票
     * </pre>
     *
     * <code>Ticket_Open_Event_Type_6 = 6;</code>
     */
    public static final int Ticket_Open_Event_Type_6_VALUE = 6;
    /**
     * <pre>
     *非油品团购开票
     * </pre>
     *
     * <code>Ticket_Open_Event_Type_7 = 7;</code>
     */
    public static final int Ticket_Open_Event_Type_7_VALUE = 7;
    /**
     * <pre>
     *电子商务开票
     * </pre>
     *
     * <code>Ticket_Open_Event_Type_8 = 8;</code>
     */
    public static final int Ticket_Open_Event_Type_8_VALUE = 8;
    /**
     * <pre>
     *充值卡开票
     * </pre>
     *
     * <code>Ticket_Open_Event_Type_9 = 9;</code>
     */
    public static final int Ticket_Open_Event_Type_9_VALUE = 9;
    /**
     * <pre>
     *增值税开票
     * </pre>
     *
     * <code>Ticket_Open_Event_Type_10 = 10;</code>
     */
    public static final int Ticket_Open_Event_Type_10_VALUE = 10;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static TicketOpenEventType valueOf(int value) {
      return forNumber(value);
    }

    public static TicketOpenEventType forNumber(int value) {
      switch (value) {
        case 0: return Ticket_Open_Event_Type_Unknown;
        case 1: return Ticket_Open_Event_Type_1;
        case 2: return Ticket_Open_Event_Type_2;
        case 3: return Ticket_Open_Event_Type_3;
        case 4: return Ticket_Open_Event_Type_4;
        case 5: return Ticket_Open_Event_Type_5;
        case 6: return Ticket_Open_Event_Type_6;
        case 7: return Ticket_Open_Event_Type_7;
        case 8: return Ticket_Open_Event_Type_8;
        case 9: return Ticket_Open_Event_Type_9;
        case 10: return Ticket_Open_Event_Type_10;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TicketOpenEventType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TicketOpenEventType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TicketOpenEventType>() {
            public TicketOpenEventType findValueByNumber(int number) {
              return TicketOpenEventType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return PimpTicketOpen.getDescriptor().getEnumTypes().get(0);
    }

    private static final TicketOpenEventType[] VALUES = values();

    public static TicketOpenEventType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TicketOpenEventType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dg.model.TicketOpenEventType)
  }

  public interface TicketOpenOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.TicketOpen)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *加油站ID
     * </pre>
     *
     * <code>string OilStationId = 1;</code>
     */
    String getOilStationId();
    /**
     * <pre>
     *加油站ID
     * </pre>
     *
     * <code>string OilStationId = 1;</code>
     */
    com.google.protobuf.ByteString
        getOilStationIdBytes();

    /**
     * <pre>
     *开票事件ID
     * </pre>
     *
     * <code>string EventId = 2;</code>
     */
    String getEventId();
    /**
     * <pre>
     *开票事件ID
     * </pre>
     *
     * <code>string EventId = 2;</code>
     */
    com.google.protobuf.ByteString
        getEventIdBytes();

    /**
     * <pre>
     *开票时间
     * </pre>
     *
     * <code>string Timestamp = 3;</code>
     */
    String getTimestamp();
    /**
     * <pre>
     *开票时间
     * </pre>
     *
     * <code>string Timestamp = 3;</code>
     */
    com.google.protobuf.ByteString
        getTimestampBytes();

    /**
     * <pre>
     *开票事件操作类型
     * </pre>
     *
     * <code>.dg.model.TicketOpenEventType EventType = 4;</code>
     */
    int getEventTypeValue();
    /**
     * <pre>
     *开票事件操作类型
     * </pre>
     *
     * <code>.dg.model.TicketOpenEventType EventType = 4;</code>
     */
    PimpTicketOpen.TicketOpenEventType getEventType();

    /**
     * <pre>
     *流水号
     * </pre>
     *
     * <code>string OilFlowNumber = 5;</code>
     */
    String getOilFlowNumber();
    /**
     * <pre>
     *流水号
     * </pre>
     *
     * <code>string OilFlowNumber = 5;</code>
     */
    com.google.protobuf.ByteString
        getOilFlowNumberBytes();

    /**
     * <pre>
     *附加信息
     * </pre>
     *
     * <code>map&lt;string, string&gt; AdditionalInfos = 6;</code>
     */
    int getAdditionalInfosCount();
    /**
     * <pre>
     *附加信息
     * </pre>
     *
     * <code>map&lt;string, string&gt; AdditionalInfos = 6;</code>
     */
    boolean containsAdditionalInfos(String key);
    /**
     * Use {@link #getAdditionalInfosMap()} instead.
     */
    @Deprecated
    java.util.Map<String, String>
    getAdditionalInfos();
    /**
     * <pre>
     *附加信息
     * </pre>
     *
     * <code>map&lt;string, string&gt; AdditionalInfos = 6;</code>
     */
    java.util.Map<String, String>
    getAdditionalInfosMap();
    /**
     * <pre>
     *附加信息
     * </pre>
     *
     * <code>map&lt;string, string&gt; AdditionalInfos = 6;</code>
     */

    String getAdditionalInfosOrDefault(String key, String defaultValue);
    /**
     * <pre>
     *附加信息
     * </pre>
     *
     * <code>map&lt;string, string&gt; AdditionalInfos = 6;</code>
     */

    String getAdditionalInfosOrThrow(String key);
  }
  /**
   * <pre>
   *开票接收对象
   * </pre>
   *
   * Protobuf type {@code dg.model.TicketOpen}
   */
  public  static final class TicketOpen extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.TicketOpen)
      TicketOpenOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TicketOpen.newBuilder() to construct.
    private TicketOpen(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TicketOpen() {
      oilStationId_ = "";
      eventId_ = "";
      timestamp_ = "";
      eventType_ = 0;
      oilFlowNumber_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TicketOpen(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              oilStationId_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              eventId_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              timestamp_ = s;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              eventType_ = rawValue;
              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();

              oilFlowNumber_ = s;
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                additionalInfos_ = com.google.protobuf.MapField.newMapField(
                    AdditionalInfosDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<String, String>
              additionalInfos__ = input.readMessage(
                  AdditionalInfosDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              additionalInfos_.getMutableMap().put(
                  additionalInfos__.getKey(), additionalInfos__.getValue());
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return PimpTicketOpen.internal_static_dg_model_TicketOpen_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetAdditionalInfos();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return PimpTicketOpen.internal_static_dg_model_TicketOpen_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PimpTicketOpen.TicketOpen.class, PimpTicketOpen.TicketOpen.Builder.class);
    }

    private int bitField0_;
    public static final int OILSTATIONID_FIELD_NUMBER = 1;
    private volatile Object oilStationId_;
    /**
     * <pre>
     *加油站ID
     * </pre>
     *
     * <code>string OilStationId = 1;</code>
     */
    public String getOilStationId() {
      Object ref = oilStationId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        oilStationId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *加油站ID
     * </pre>
     *
     * <code>string OilStationId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getOilStationIdBytes() {
      Object ref = oilStationId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        oilStationId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EVENTID_FIELD_NUMBER = 2;
    private volatile Object eventId_;
    /**
     * <pre>
     *开票事件ID
     * </pre>
     *
     * <code>string EventId = 2;</code>
     */
    public String getEventId() {
      Object ref = eventId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        eventId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *开票事件ID
     * </pre>
     *
     * <code>string EventId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getEventIdBytes() {
      Object ref = eventId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        eventId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 3;
    private volatile Object timestamp_;
    /**
     * <pre>
     *开票时间
     * </pre>
     *
     * <code>string Timestamp = 3;</code>
     */
    public String getTimestamp() {
      Object ref = timestamp_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        timestamp_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *开票时间
     * </pre>
     *
     * <code>string Timestamp = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTimestampBytes() {
      Object ref = timestamp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        timestamp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EVENTTYPE_FIELD_NUMBER = 4;
    private int eventType_;
    /**
     * <pre>
     *开票事件操作类型
     * </pre>
     *
     * <code>.dg.model.TicketOpenEventType EventType = 4;</code>
     */
    public int getEventTypeValue() {
      return eventType_;
    }
    /**
     * <pre>
     *开票事件操作类型
     * </pre>
     *
     * <code>.dg.model.TicketOpenEventType EventType = 4;</code>
     */
    public PimpTicketOpen.TicketOpenEventType getEventType() {
      @SuppressWarnings("deprecation")
      PimpTicketOpen.TicketOpenEventType result = PimpTicketOpen.TicketOpenEventType.valueOf(eventType_);
      return result == null ? PimpTicketOpen.TicketOpenEventType.UNRECOGNIZED : result;
    }

    public static final int OILFLOWNUMBER_FIELD_NUMBER = 5;
    private volatile Object oilFlowNumber_;
    /**
     * <pre>
     *流水号
     * </pre>
     *
     * <code>string OilFlowNumber = 5;</code>
     */
    public String getOilFlowNumber() {
      Object ref = oilFlowNumber_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        oilFlowNumber_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *流水号
     * </pre>
     *
     * <code>string OilFlowNumber = 5;</code>
     */
    public com.google.protobuf.ByteString
        getOilFlowNumberBytes() {
      Object ref = oilFlowNumber_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        oilFlowNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ADDITIONALINFOS_FIELD_NUMBER = 6;
    private static final class AdditionalInfosDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          String, String> defaultEntry =
              com.google.protobuf.MapEntry
              .<String, String>newDefaultInstance(
                  PimpTicketOpen.internal_static_dg_model_TicketOpen_AdditionalInfosEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        String, String> additionalInfos_;
    private com.google.protobuf.MapField<String, String>
    internalGetAdditionalInfos() {
      if (additionalInfos_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            AdditionalInfosDefaultEntryHolder.defaultEntry);
      }
      return additionalInfos_;
    }

    public int getAdditionalInfosCount() {
      return internalGetAdditionalInfos().getMap().size();
    }
    /**
     * <pre>
     *附加信息
     * </pre>
     *
     * <code>map&lt;string, string&gt; AdditionalInfos = 6;</code>
     */

    public boolean containsAdditionalInfos(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      return internalGetAdditionalInfos().getMap().containsKey(key);
    }
    /**
     * Use {@link #getAdditionalInfosMap()} instead.
     */
    @Deprecated
    public java.util.Map<String, String> getAdditionalInfos() {
      return getAdditionalInfosMap();
    }
    /**
     * <pre>
     *附加信息
     * </pre>
     *
     * <code>map&lt;string, string&gt; AdditionalInfos = 6;</code>
     */

    public java.util.Map<String, String> getAdditionalInfosMap() {
      return internalGetAdditionalInfos().getMap();
    }
    /**
     * <pre>
     *附加信息
     * </pre>
     *
     * <code>map&lt;string, string&gt; AdditionalInfos = 6;</code>
     */

    public String getAdditionalInfosOrDefault(
        String key,
        String defaultValue) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, String> map =
          internalGetAdditionalInfos().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *附加信息
     * </pre>
     *
     * <code>map&lt;string, string&gt; AdditionalInfos = 6;</code>
     */

    public String getAdditionalInfosOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, String> map =
          internalGetAdditionalInfos().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getOilStationIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, oilStationId_);
      }
      if (!getEventIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, eventId_);
      }
      if (!getTimestampBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, timestamp_);
      }
      if (eventType_ != PimpTicketOpen.TicketOpenEventType.Ticket_Open_Event_Type_Unknown.getNumber()) {
        output.writeEnum(4, eventType_);
      }
      if (!getOilFlowNumberBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, oilFlowNumber_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetAdditionalInfos(),
          AdditionalInfosDefaultEntryHolder.defaultEntry,
          6);
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getOilStationIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, oilStationId_);
      }
      if (!getEventIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, eventId_);
      }
      if (!getTimestampBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, timestamp_);
      }
      if (eventType_ != PimpTicketOpen.TicketOpenEventType.Ticket_Open_Event_Type_Unknown.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, eventType_);
      }
      if (!getOilFlowNumberBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, oilFlowNumber_);
      }
      for (java.util.Map.Entry<String, String> entry
           : internalGetAdditionalInfos().getMap().entrySet()) {
        com.google.protobuf.MapEntry<String, String>
        additionalInfos__ = AdditionalInfosDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, additionalInfos__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof PimpTicketOpen.TicketOpen)) {
        return super.equals(obj);
      }
      PimpTicketOpen.TicketOpen other = (PimpTicketOpen.TicketOpen) obj;

      boolean result = true;
      result = result && getOilStationId()
          .equals(other.getOilStationId());
      result = result && getEventId()
          .equals(other.getEventId());
      result = result && getTimestamp()
          .equals(other.getTimestamp());
      result = result && eventType_ == other.eventType_;
      result = result && getOilFlowNumber()
          .equals(other.getOilFlowNumber());
      result = result && internalGetAdditionalInfos().equals(
          other.internalGetAdditionalInfos());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + OILSTATIONID_FIELD_NUMBER;
      hash = (53 * hash) + getOilStationId().hashCode();
      hash = (37 * hash) + EVENTID_FIELD_NUMBER;
      hash = (53 * hash) + getEventId().hashCode();
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + getTimestamp().hashCode();
      hash = (37 * hash) + EVENTTYPE_FIELD_NUMBER;
      hash = (53 * hash) + eventType_;
      hash = (37 * hash) + OILFLOWNUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getOilFlowNumber().hashCode();
      if (!internalGetAdditionalInfos().getMap().isEmpty()) {
        hash = (37 * hash) + ADDITIONALINFOS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetAdditionalInfos().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static PimpTicketOpen.TicketOpen parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PimpTicketOpen.TicketOpen parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PimpTicketOpen.TicketOpen parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PimpTicketOpen.TicketOpen parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PimpTicketOpen.TicketOpen parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PimpTicketOpen.TicketOpen parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PimpTicketOpen.TicketOpen parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PimpTicketOpen.TicketOpen parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static PimpTicketOpen.TicketOpen parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static PimpTicketOpen.TicketOpen parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static PimpTicketOpen.TicketOpen parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PimpTicketOpen.TicketOpen parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(PimpTicketOpen.TicketOpen prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *开票接收对象
     * </pre>
     *
     * Protobuf type {@code dg.model.TicketOpen}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.TicketOpen)
        PimpTicketOpen.TicketOpenOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return PimpTicketOpen.internal_static_dg_model_TicketOpen_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 6:
            return internalGetAdditionalInfos();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 6:
            return internalGetMutableAdditionalInfos();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return PimpTicketOpen.internal_static_dg_model_TicketOpen_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PimpTicketOpen.TicketOpen.class, PimpTicketOpen.TicketOpen.Builder.class);
      }

      // Construct using dg.model.PimpTicketOpen.TicketOpen.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        oilStationId_ = "";

        eventId_ = "";

        timestamp_ = "";

        eventType_ = 0;

        oilFlowNumber_ = "";

        internalGetMutableAdditionalInfos().clear();
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return PimpTicketOpen.internal_static_dg_model_TicketOpen_descriptor;
      }

      @Override
      public PimpTicketOpen.TicketOpen getDefaultInstanceForType() {
        return PimpTicketOpen.TicketOpen.getDefaultInstance();
      }

      @Override
      public PimpTicketOpen.TicketOpen build() {
        PimpTicketOpen.TicketOpen result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public PimpTicketOpen.TicketOpen buildPartial() {
        PimpTicketOpen.TicketOpen result = new PimpTicketOpen.TicketOpen(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.oilStationId_ = oilStationId_;
        result.eventId_ = eventId_;
        result.timestamp_ = timestamp_;
        result.eventType_ = eventType_;
        result.oilFlowNumber_ = oilFlowNumber_;
        result.additionalInfos_ = internalGetAdditionalInfos();
        result.additionalInfos_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PimpTicketOpen.TicketOpen) {
          return mergeFrom((PimpTicketOpen.TicketOpen)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PimpTicketOpen.TicketOpen other) {
        if (other == PimpTicketOpen.TicketOpen.getDefaultInstance()) return this;
        if (!other.getOilStationId().isEmpty()) {
          oilStationId_ = other.oilStationId_;
          onChanged();
        }
        if (!other.getEventId().isEmpty()) {
          eventId_ = other.eventId_;
          onChanged();
        }
        if (!other.getTimestamp().isEmpty()) {
          timestamp_ = other.timestamp_;
          onChanged();
        }
        if (other.eventType_ != 0) {
          setEventTypeValue(other.getEventTypeValue());
        }
        if (!other.getOilFlowNumber().isEmpty()) {
          oilFlowNumber_ = other.oilFlowNumber_;
          onChanged();
        }
        internalGetMutableAdditionalInfos().mergeFrom(
            other.internalGetAdditionalInfos());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PimpTicketOpen.TicketOpen parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PimpTicketOpen.TicketOpen) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object oilStationId_ = "";
      /**
       * <pre>
       *加油站ID
       * </pre>
       *
       * <code>string OilStationId = 1;</code>
       */
      public String getOilStationId() {
        Object ref = oilStationId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          oilStationId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *加油站ID
       * </pre>
       *
       * <code>string OilStationId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getOilStationIdBytes() {
        Object ref = oilStationId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          oilStationId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *加油站ID
       * </pre>
       *
       * <code>string OilStationId = 1;</code>
       */
      public Builder setOilStationId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        oilStationId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *加油站ID
       * </pre>
       *
       * <code>string OilStationId = 1;</code>
       */
      public Builder clearOilStationId() {

        oilStationId_ = getDefaultInstance().getOilStationId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *加油站ID
       * </pre>
       *
       * <code>string OilStationId = 1;</code>
       */
      public Builder setOilStationIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        oilStationId_ = value;
        onChanged();
        return this;
      }

      private Object eventId_ = "";
      /**
       * <pre>
       *开票事件ID
       * </pre>
       *
       * <code>string EventId = 2;</code>
       */
      public String getEventId() {
        Object ref = eventId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          eventId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *开票事件ID
       * </pre>
       *
       * <code>string EventId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getEventIdBytes() {
        Object ref = eventId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          eventId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *开票事件ID
       * </pre>
       *
       * <code>string EventId = 2;</code>
       */
      public Builder setEventId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        eventId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开票事件ID
       * </pre>
       *
       * <code>string EventId = 2;</code>
       */
      public Builder clearEventId() {

        eventId_ = getDefaultInstance().getEventId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开票事件ID
       * </pre>
       *
       * <code>string EventId = 2;</code>
       */
      public Builder setEventIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        eventId_ = value;
        onChanged();
        return this;
      }

      private Object timestamp_ = "";
      /**
       * <pre>
       *开票时间
       * </pre>
       *
       * <code>string Timestamp = 3;</code>
       */
      public String getTimestamp() {
        Object ref = timestamp_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          timestamp_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *开票时间
       * </pre>
       *
       * <code>string Timestamp = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTimestampBytes() {
        Object ref = timestamp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          timestamp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *开票时间
       * </pre>
       *
       * <code>string Timestamp = 3;</code>
       */
      public Builder setTimestamp(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开票时间
       * </pre>
       *
       * <code>string Timestamp = 3;</code>
       */
      public Builder clearTimestamp() {

        timestamp_ = getDefaultInstance().getTimestamp();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开票时间
       * </pre>
       *
       * <code>string Timestamp = 3;</code>
       */
      public Builder setTimestampBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        timestamp_ = value;
        onChanged();
        return this;
      }

      private int eventType_ = 0;
      /**
       * <pre>
       *开票事件操作类型
       * </pre>
       *
       * <code>.dg.model.TicketOpenEventType EventType = 4;</code>
       */
      public int getEventTypeValue() {
        return eventType_;
      }
      /**
       * <pre>
       *开票事件操作类型
       * </pre>
       *
       * <code>.dg.model.TicketOpenEventType EventType = 4;</code>
       */
      public Builder setEventTypeValue(int value) {
        eventType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开票事件操作类型
       * </pre>
       *
       * <code>.dg.model.TicketOpenEventType EventType = 4;</code>
       */
      public PimpTicketOpen.TicketOpenEventType getEventType() {
        @SuppressWarnings("deprecation")
        PimpTicketOpen.TicketOpenEventType result = PimpTicketOpen.TicketOpenEventType.valueOf(eventType_);
        return result == null ? PimpTicketOpen.TicketOpenEventType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *开票事件操作类型
       * </pre>
       *
       * <code>.dg.model.TicketOpenEventType EventType = 4;</code>
       */
      public Builder setEventType(PimpTicketOpen.TicketOpenEventType value) {
        if (value == null) {
          throw new NullPointerException();
        }

        eventType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开票事件操作类型
       * </pre>
       *
       * <code>.dg.model.TicketOpenEventType EventType = 4;</code>
       */
      public Builder clearEventType() {

        eventType_ = 0;
        onChanged();
        return this;
      }

      private Object oilFlowNumber_ = "";
      /**
       * <pre>
       *流水号
       * </pre>
       *
       * <code>string OilFlowNumber = 5;</code>
       */
      public String getOilFlowNumber() {
        Object ref = oilFlowNumber_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          oilFlowNumber_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *流水号
       * </pre>
       *
       * <code>string OilFlowNumber = 5;</code>
       */
      public com.google.protobuf.ByteString
          getOilFlowNumberBytes() {
        Object ref = oilFlowNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          oilFlowNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *流水号
       * </pre>
       *
       * <code>string OilFlowNumber = 5;</code>
       */
      public Builder setOilFlowNumber(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        oilFlowNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *流水号
       * </pre>
       *
       * <code>string OilFlowNumber = 5;</code>
       */
      public Builder clearOilFlowNumber() {

        oilFlowNumber_ = getDefaultInstance().getOilFlowNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *流水号
       * </pre>
       *
       * <code>string OilFlowNumber = 5;</code>
       */
      public Builder setOilFlowNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        oilFlowNumber_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          String, String> additionalInfos_;
      private com.google.protobuf.MapField<String, String>
      internalGetAdditionalInfos() {
        if (additionalInfos_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              AdditionalInfosDefaultEntryHolder.defaultEntry);
        }
        return additionalInfos_;
      }
      private com.google.protobuf.MapField<String, String>
      internalGetMutableAdditionalInfos() {
        onChanged();;
        if (additionalInfos_ == null) {
          additionalInfos_ = com.google.protobuf.MapField.newMapField(
              AdditionalInfosDefaultEntryHolder.defaultEntry);
        }
        if (!additionalInfos_.isMutable()) {
          additionalInfos_ = additionalInfos_.copy();
        }
        return additionalInfos_;
      }

      public int getAdditionalInfosCount() {
        return internalGetAdditionalInfos().getMap().size();
      }
      /**
       * <pre>
       *附加信息
       * </pre>
       *
       * <code>map&lt;string, string&gt; AdditionalInfos = 6;</code>
       */

      public boolean containsAdditionalInfos(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        return internalGetAdditionalInfos().getMap().containsKey(key);
      }
      /**
       * Use {@link #getAdditionalInfosMap()} instead.
       */
      @Deprecated
      public java.util.Map<String, String> getAdditionalInfos() {
        return getAdditionalInfosMap();
      }
      /**
       * <pre>
       *附加信息
       * </pre>
       *
       * <code>map&lt;string, string&gt; AdditionalInfos = 6;</code>
       */

      public java.util.Map<String, String> getAdditionalInfosMap() {
        return internalGetAdditionalInfos().getMap();
      }
      /**
       * <pre>
       *附加信息
       * </pre>
       *
       * <code>map&lt;string, string&gt; AdditionalInfos = 6;</code>
       */

      public String getAdditionalInfosOrDefault(
          String key,
          String defaultValue) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, String> map =
            internalGetAdditionalInfos().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *附加信息
       * </pre>
       *
       * <code>map&lt;string, string&gt; AdditionalInfos = 6;</code>
       */

      public String getAdditionalInfosOrThrow(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, String> map =
            internalGetAdditionalInfos().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearAdditionalInfos() {
        internalGetMutableAdditionalInfos().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *附加信息
       * </pre>
       *
       * <code>map&lt;string, string&gt; AdditionalInfos = 6;</code>
       */

      public Builder removeAdditionalInfos(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        internalGetMutableAdditionalInfos().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<String, String>
      getMutableAdditionalInfos() {
        return internalGetMutableAdditionalInfos().getMutableMap();
      }
      /**
       * <pre>
       *附加信息
       * </pre>
       *
       * <code>map&lt;string, string&gt; AdditionalInfos = 6;</code>
       */
      public Builder putAdditionalInfos(
          String key,
          String value) {
        if (key == null) { throw new NullPointerException(); }
        if (value == null) { throw new NullPointerException(); }
        internalGetMutableAdditionalInfos().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *附加信息
       * </pre>
       *
       * <code>map&lt;string, string&gt; AdditionalInfos = 6;</code>
       */

      public Builder putAllAdditionalInfos(
          java.util.Map<String, String> values) {
        internalGetMutableAdditionalInfos().getMutableMap()
            .putAll(values);
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:dg.model.TicketOpen)
    }

    // @@protoc_insertion_point(class_scope:dg.model.TicketOpen)
    private static final PimpTicketOpen.TicketOpen DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PimpTicketOpen.TicketOpen();
    }

    public static PimpTicketOpen.TicketOpen getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TicketOpen>
        PARSER = new com.google.protobuf.AbstractParser<TicketOpen>() {
      @Override
      public TicketOpen parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TicketOpen(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TicketOpen> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<TicketOpen> getParserForType() {
      return PARSER;
    }

    @Override
    public PimpTicketOpen.TicketOpen getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TicketOpenPublishOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dg.model.TicketOpenPublish)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *加油站ID
     * </pre>
     *
     * <code>string OilStationId = 1;</code>
     */
    String getOilStationId();
    /**
     * <pre>
     *加油站ID
     * </pre>
     *
     * <code>string OilStationId = 1;</code>
     */
    com.google.protobuf.ByteString
        getOilStationIdBytes();

    /**
     * <pre>
     *开票事件流水号
     * </pre>
     *
     * <code>string OilFlowNumber = 2;</code>
     */
    String getOilFlowNumber();
    /**
     * <pre>
     *开票事件流水号
     * </pre>
     *
     * <code>string OilFlowNumber = 2;</code>
     */
    com.google.protobuf.ByteString
        getOilFlowNumberBytes();

    /**
     * <pre>
     *事件时间
     * </pre>
     *
     * <code>string Timestamp = 3;</code>
     */
    String getTimestamp();
    /**
     * <pre>
     *事件时间
     * </pre>
     *
     * <code>string Timestamp = 3;</code>
     */
    com.google.protobuf.ByteString
        getTimestampBytes();

    /**
     * <pre>
     *开票事件类型
     * </pre>
     *
     * <code>string EventType = 4;</code>
     */
    String getEventType();
    /**
     * <pre>
     *开票事件类型
     * </pre>
     *
     * <code>string EventType = 4;</code>
     */
    com.google.protobuf.ByteString
        getEventTypeBytes();

    /**
     * <pre>
     *是否有拍摄到人脸
     * </pre>
     *
     * <code>string TakeFaceOrNot = 5;</code>
     */
    String getTakeFaceOrNot();
    /**
     * <pre>
     *是否有拍摄到人脸
     * </pre>
     *
     * <code>string TakeFaceOrNot = 5;</code>
     */
    com.google.protobuf.ByteString
        getTakeFaceOrNotBytes();

    /**
     * <pre>
     *是否是员工
     * </pre>
     *
     * <code>string EmployeeOrNot = 6;</code>
     */
    String getEmployeeOrNot();
    /**
     * <pre>
     *是否是员工
     * </pre>
     *
     * <code>string EmployeeOrNot = 6;</code>
     */
    com.google.protobuf.ByteString
        getEmployeeOrNotBytes();

    /**
     * <pre>
     *收银区是否有人
     * </pre>
     *
     * <code>string CashierHasPerson = 7;</code>
     */
    String getCashierHasPerson();
    /**
     * <pre>
     *收银区是否有人
     * </pre>
     *
     * <code>string CashierHasPerson = 7;</code>
     */
    com.google.protobuf.ByteString
        getCashierHasPersonBytes();

    /**
     * <pre>
     *图片链接1
     * </pre>
     *
     * <code>string FaceImageUrl1 = 8;</code>
     */
    String getFaceImageUrl1();
    /**
     * <pre>
     *图片链接1
     * </pre>
     *
     * <code>string FaceImageUrl1 = 8;</code>
     */
    com.google.protobuf.ByteString
        getFaceImageUrl1Bytes();

    /**
     * <pre>
     *图片链接2
     * </pre>
     *
     * <code>string FaceImageUrl2 = 9;</code>
     */
    String getFaceImageUrl2();
    /**
     * <pre>
     *图片链接2
     * </pre>
     *
     * <code>string FaceImageUrl2 = 9;</code>
     */
    com.google.protobuf.ByteString
        getFaceImageUrl2Bytes();

    /**
     * <pre>
     *附加信息
     * </pre>
     *
     * <code>map&lt;string, string&gt; AdditionalInfos = 10;</code>
     */
    int getAdditionalInfosCount();
    /**
     * <pre>
     *附加信息
     * </pre>
     *
     * <code>map&lt;string, string&gt; AdditionalInfos = 10;</code>
     */
    boolean containsAdditionalInfos(String key);
    /**
     * Use {@link #getAdditionalInfosMap()} instead.
     */
    @Deprecated
    java.util.Map<String, String>
    getAdditionalInfos();
    /**
     * <pre>
     *附加信息
     * </pre>
     *
     * <code>map&lt;string, string&gt; AdditionalInfos = 10;</code>
     */
    java.util.Map<String, String>
    getAdditionalInfosMap();
    /**
     * <pre>
     *附加信息
     * </pre>
     *
     * <code>map&lt;string, string&gt; AdditionalInfos = 10;</code>
     */

    String getAdditionalInfosOrDefault(String key, String defaultValue);
    /**
     * <pre>
     *附加信息
     * </pre>
     *
     * <code>map&lt;string, string&gt; AdditionalInfos = 10;</code>
     */

    String getAdditionalInfosOrThrow(String key);
  }
  /**
   * <pre>
   *开票推送对象
   * </pre>
   *
   * Protobuf type {@code dg.model.TicketOpenPublish}
   */
  public  static final class TicketOpenPublish extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dg.model.TicketOpenPublish)
      TicketOpenPublishOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TicketOpenPublish.newBuilder() to construct.
    private TicketOpenPublish(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TicketOpenPublish() {
      oilStationId_ = "";
      oilFlowNumber_ = "";
      timestamp_ = "";
      eventType_ = "";
      takeFaceOrNot_ = "";
      employeeOrNot_ = "";
      cashierHasPerson_ = "";
      faceImageUrl1_ = "";
      faceImageUrl2_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TicketOpenPublish(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              oilStationId_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              oilFlowNumber_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              timestamp_ = s;
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              eventType_ = s;
              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();

              takeFaceOrNot_ = s;
              break;
            }
            case 50: {
              String s = input.readStringRequireUtf8();

              employeeOrNot_ = s;
              break;
            }
            case 58: {
              String s = input.readStringRequireUtf8();

              cashierHasPerson_ = s;
              break;
            }
            case 66: {
              String s = input.readStringRequireUtf8();

              faceImageUrl1_ = s;
              break;
            }
            case 74: {
              String s = input.readStringRequireUtf8();

              faceImageUrl2_ = s;
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                additionalInfos_ = com.google.protobuf.MapField.newMapField(
                    AdditionalInfosDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000200;
              }
              com.google.protobuf.MapEntry<String, String>
              additionalInfos__ = input.readMessage(
                  AdditionalInfosDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              additionalInfos_.getMutableMap().put(
                  additionalInfos__.getKey(), additionalInfos__.getValue());
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return PimpTicketOpen.internal_static_dg_model_TicketOpenPublish_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 10:
          return internalGetAdditionalInfos();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return PimpTicketOpen.internal_static_dg_model_TicketOpenPublish_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PimpTicketOpen.TicketOpenPublish.class, PimpTicketOpen.TicketOpenPublish.Builder.class);
    }

    private int bitField0_;
    public static final int OILSTATIONID_FIELD_NUMBER = 1;
    private volatile Object oilStationId_;
    /**
     * <pre>
     *加油站ID
     * </pre>
     *
     * <code>string OilStationId = 1;</code>
     */
    public String getOilStationId() {
      Object ref = oilStationId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        oilStationId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *加油站ID
     * </pre>
     *
     * <code>string OilStationId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getOilStationIdBytes() {
      Object ref = oilStationId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        oilStationId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OILFLOWNUMBER_FIELD_NUMBER = 2;
    private volatile Object oilFlowNumber_;
    /**
     * <pre>
     *开票事件流水号
     * </pre>
     *
     * <code>string OilFlowNumber = 2;</code>
     */
    public String getOilFlowNumber() {
      Object ref = oilFlowNumber_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        oilFlowNumber_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *开票事件流水号
     * </pre>
     *
     * <code>string OilFlowNumber = 2;</code>
     */
    public com.google.protobuf.ByteString
        getOilFlowNumberBytes() {
      Object ref = oilFlowNumber_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        oilFlowNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 3;
    private volatile Object timestamp_;
    /**
     * <pre>
     *事件时间
     * </pre>
     *
     * <code>string Timestamp = 3;</code>
     */
    public String getTimestamp() {
      Object ref = timestamp_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        timestamp_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *事件时间
     * </pre>
     *
     * <code>string Timestamp = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTimestampBytes() {
      Object ref = timestamp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        timestamp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EVENTTYPE_FIELD_NUMBER = 4;
    private volatile Object eventType_;
    /**
     * <pre>
     *开票事件类型
     * </pre>
     *
     * <code>string EventType = 4;</code>
     */
    public String getEventType() {
      Object ref = eventType_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        eventType_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *开票事件类型
     * </pre>
     *
     * <code>string EventType = 4;</code>
     */
    public com.google.protobuf.ByteString
        getEventTypeBytes() {
      Object ref = eventType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        eventType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TAKEFACEORNOT_FIELD_NUMBER = 5;
    private volatile Object takeFaceOrNot_;
    /**
     * <pre>
     *是否有拍摄到人脸
     * </pre>
     *
     * <code>string TakeFaceOrNot = 5;</code>
     */
    public String getTakeFaceOrNot() {
      Object ref = takeFaceOrNot_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        takeFaceOrNot_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *是否有拍摄到人脸
     * </pre>
     *
     * <code>string TakeFaceOrNot = 5;</code>
     */
    public com.google.protobuf.ByteString
        getTakeFaceOrNotBytes() {
      Object ref = takeFaceOrNot_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        takeFaceOrNot_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EMPLOYEEORNOT_FIELD_NUMBER = 6;
    private volatile Object employeeOrNot_;
    /**
     * <pre>
     *是否是员工
     * </pre>
     *
     * <code>string EmployeeOrNot = 6;</code>
     */
    public String getEmployeeOrNot() {
      Object ref = employeeOrNot_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        employeeOrNot_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *是否是员工
     * </pre>
     *
     * <code>string EmployeeOrNot = 6;</code>
     */
    public com.google.protobuf.ByteString
        getEmployeeOrNotBytes() {
      Object ref = employeeOrNot_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        employeeOrNot_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CASHIERHASPERSON_FIELD_NUMBER = 7;
    private volatile Object cashierHasPerson_;
    /**
     * <pre>
     *收银区是否有人
     * </pre>
     *
     * <code>string CashierHasPerson = 7;</code>
     */
    public String getCashierHasPerson() {
      Object ref = cashierHasPerson_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        cashierHasPerson_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *收银区是否有人
     * </pre>
     *
     * <code>string CashierHasPerson = 7;</code>
     */
    public com.google.protobuf.ByteString
        getCashierHasPersonBytes() {
      Object ref = cashierHasPerson_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        cashierHasPerson_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FACEIMAGEURL1_FIELD_NUMBER = 8;
    private volatile Object faceImageUrl1_;
    /**
     * <pre>
     *图片链接1
     * </pre>
     *
     * <code>string FaceImageUrl1 = 8;</code>
     */
    public String getFaceImageUrl1() {
      Object ref = faceImageUrl1_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        faceImageUrl1_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *图片链接1
     * </pre>
     *
     * <code>string FaceImageUrl1 = 8;</code>
     */
    public com.google.protobuf.ByteString
        getFaceImageUrl1Bytes() {
      Object ref = faceImageUrl1_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        faceImageUrl1_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FACEIMAGEURL2_FIELD_NUMBER = 9;
    private volatile Object faceImageUrl2_;
    /**
     * <pre>
     *图片链接2
     * </pre>
     *
     * <code>string FaceImageUrl2 = 9;</code>
     */
    public String getFaceImageUrl2() {
      Object ref = faceImageUrl2_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        faceImageUrl2_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *图片链接2
     * </pre>
     *
     * <code>string FaceImageUrl2 = 9;</code>
     */
    public com.google.protobuf.ByteString
        getFaceImageUrl2Bytes() {
      Object ref = faceImageUrl2_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        faceImageUrl2_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ADDITIONALINFOS_FIELD_NUMBER = 10;
    private static final class AdditionalInfosDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          String, String> defaultEntry =
              com.google.protobuf.MapEntry
              .<String, String>newDefaultInstance(
                  PimpTicketOpen.internal_static_dg_model_TicketOpenPublish_AdditionalInfosEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        String, String> additionalInfos_;
    private com.google.protobuf.MapField<String, String>
    internalGetAdditionalInfos() {
      if (additionalInfos_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            AdditionalInfosDefaultEntryHolder.defaultEntry);
      }
      return additionalInfos_;
    }

    public int getAdditionalInfosCount() {
      return internalGetAdditionalInfos().getMap().size();
    }
    /**
     * <pre>
     *附加信息
     * </pre>
     *
     * <code>map&lt;string, string&gt; AdditionalInfos = 10;</code>
     */

    public boolean containsAdditionalInfos(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      return internalGetAdditionalInfos().getMap().containsKey(key);
    }
    /**
     * Use {@link #getAdditionalInfosMap()} instead.
     */
    @Deprecated
    public java.util.Map<String, String> getAdditionalInfos() {
      return getAdditionalInfosMap();
    }
    /**
     * <pre>
     *附加信息
     * </pre>
     *
     * <code>map&lt;string, string&gt; AdditionalInfos = 10;</code>
     */

    public java.util.Map<String, String> getAdditionalInfosMap() {
      return internalGetAdditionalInfos().getMap();
    }
    /**
     * <pre>
     *附加信息
     * </pre>
     *
     * <code>map&lt;string, string&gt; AdditionalInfos = 10;</code>
     */

    public String getAdditionalInfosOrDefault(
        String key,
        String defaultValue) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, String> map =
          internalGetAdditionalInfos().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *附加信息
     * </pre>
     *
     * <code>map&lt;string, string&gt; AdditionalInfos = 10;</code>
     */

    public String getAdditionalInfosOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, String> map =
          internalGetAdditionalInfos().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getOilStationIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, oilStationId_);
      }
      if (!getOilFlowNumberBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, oilFlowNumber_);
      }
      if (!getTimestampBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, timestamp_);
      }
      if (!getEventTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, eventType_);
      }
      if (!getTakeFaceOrNotBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, takeFaceOrNot_);
      }
      if (!getEmployeeOrNotBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, employeeOrNot_);
      }
      if (!getCashierHasPersonBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, cashierHasPerson_);
      }
      if (!getFaceImageUrl1Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, faceImageUrl1_);
      }
      if (!getFaceImageUrl2Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, faceImageUrl2_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetAdditionalInfos(),
          AdditionalInfosDefaultEntryHolder.defaultEntry,
          10);
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getOilStationIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, oilStationId_);
      }
      if (!getOilFlowNumberBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, oilFlowNumber_);
      }
      if (!getTimestampBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, timestamp_);
      }
      if (!getEventTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, eventType_);
      }
      if (!getTakeFaceOrNotBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, takeFaceOrNot_);
      }
      if (!getEmployeeOrNotBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, employeeOrNot_);
      }
      if (!getCashierHasPersonBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, cashierHasPerson_);
      }
      if (!getFaceImageUrl1Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, faceImageUrl1_);
      }
      if (!getFaceImageUrl2Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, faceImageUrl2_);
      }
      for (java.util.Map.Entry<String, String> entry
           : internalGetAdditionalInfos().getMap().entrySet()) {
        com.google.protobuf.MapEntry<String, String>
        additionalInfos__ = AdditionalInfosDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, additionalInfos__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof PimpTicketOpen.TicketOpenPublish)) {
        return super.equals(obj);
      }
      PimpTicketOpen.TicketOpenPublish other = (PimpTicketOpen.TicketOpenPublish) obj;

      boolean result = true;
      result = result && getOilStationId()
          .equals(other.getOilStationId());
      result = result && getOilFlowNumber()
          .equals(other.getOilFlowNumber());
      result = result && getTimestamp()
          .equals(other.getTimestamp());
      result = result && getEventType()
          .equals(other.getEventType());
      result = result && getTakeFaceOrNot()
          .equals(other.getTakeFaceOrNot());
      result = result && getEmployeeOrNot()
          .equals(other.getEmployeeOrNot());
      result = result && getCashierHasPerson()
          .equals(other.getCashierHasPerson());
      result = result && getFaceImageUrl1()
          .equals(other.getFaceImageUrl1());
      result = result && getFaceImageUrl2()
          .equals(other.getFaceImageUrl2());
      result = result && internalGetAdditionalInfos().equals(
          other.internalGetAdditionalInfos());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + OILSTATIONID_FIELD_NUMBER;
      hash = (53 * hash) + getOilStationId().hashCode();
      hash = (37 * hash) + OILFLOWNUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getOilFlowNumber().hashCode();
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + getTimestamp().hashCode();
      hash = (37 * hash) + EVENTTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getEventType().hashCode();
      hash = (37 * hash) + TAKEFACEORNOT_FIELD_NUMBER;
      hash = (53 * hash) + getTakeFaceOrNot().hashCode();
      hash = (37 * hash) + EMPLOYEEORNOT_FIELD_NUMBER;
      hash = (53 * hash) + getEmployeeOrNot().hashCode();
      hash = (37 * hash) + CASHIERHASPERSON_FIELD_NUMBER;
      hash = (53 * hash) + getCashierHasPerson().hashCode();
      hash = (37 * hash) + FACEIMAGEURL1_FIELD_NUMBER;
      hash = (53 * hash) + getFaceImageUrl1().hashCode();
      hash = (37 * hash) + FACEIMAGEURL2_FIELD_NUMBER;
      hash = (53 * hash) + getFaceImageUrl2().hashCode();
      if (!internalGetAdditionalInfos().getMap().isEmpty()) {
        hash = (37 * hash) + ADDITIONALINFOS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetAdditionalInfos().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static PimpTicketOpen.TicketOpenPublish parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PimpTicketOpen.TicketOpenPublish parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PimpTicketOpen.TicketOpenPublish parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PimpTicketOpen.TicketOpenPublish parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PimpTicketOpen.TicketOpenPublish parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PimpTicketOpen.TicketOpenPublish parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PimpTicketOpen.TicketOpenPublish parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PimpTicketOpen.TicketOpenPublish parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static PimpTicketOpen.TicketOpenPublish parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static PimpTicketOpen.TicketOpenPublish parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static PimpTicketOpen.TicketOpenPublish parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PimpTicketOpen.TicketOpenPublish parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(PimpTicketOpen.TicketOpenPublish prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *开票推送对象
     * </pre>
     *
     * Protobuf type {@code dg.model.TicketOpenPublish}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dg.model.TicketOpenPublish)
        PimpTicketOpen.TicketOpenPublishOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return PimpTicketOpen.internal_static_dg_model_TicketOpenPublish_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 10:
            return internalGetAdditionalInfos();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 10:
            return internalGetMutableAdditionalInfos();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return PimpTicketOpen.internal_static_dg_model_TicketOpenPublish_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PimpTicketOpen.TicketOpenPublish.class, PimpTicketOpen.TicketOpenPublish.Builder.class);
      }

      // Construct using dg.model.PimpTicketOpen.TicketOpenPublish.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        oilStationId_ = "";

        oilFlowNumber_ = "";

        timestamp_ = "";

        eventType_ = "";

        takeFaceOrNot_ = "";

        employeeOrNot_ = "";

        cashierHasPerson_ = "";

        faceImageUrl1_ = "";

        faceImageUrl2_ = "";

        internalGetMutableAdditionalInfos().clear();
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return PimpTicketOpen.internal_static_dg_model_TicketOpenPublish_descriptor;
      }

      @Override
      public PimpTicketOpen.TicketOpenPublish getDefaultInstanceForType() {
        return PimpTicketOpen.TicketOpenPublish.getDefaultInstance();
      }

      @Override
      public PimpTicketOpen.TicketOpenPublish build() {
        PimpTicketOpen.TicketOpenPublish result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public PimpTicketOpen.TicketOpenPublish buildPartial() {
        PimpTicketOpen.TicketOpenPublish result = new PimpTicketOpen.TicketOpenPublish(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.oilStationId_ = oilStationId_;
        result.oilFlowNumber_ = oilFlowNumber_;
        result.timestamp_ = timestamp_;
        result.eventType_ = eventType_;
        result.takeFaceOrNot_ = takeFaceOrNot_;
        result.employeeOrNot_ = employeeOrNot_;
        result.cashierHasPerson_ = cashierHasPerson_;
        result.faceImageUrl1_ = faceImageUrl1_;
        result.faceImageUrl2_ = faceImageUrl2_;
        result.additionalInfos_ = internalGetAdditionalInfos();
        result.additionalInfos_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PimpTicketOpen.TicketOpenPublish) {
          return mergeFrom((PimpTicketOpen.TicketOpenPublish)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PimpTicketOpen.TicketOpenPublish other) {
        if (other == PimpTicketOpen.TicketOpenPublish.getDefaultInstance()) return this;
        if (!other.getOilStationId().isEmpty()) {
          oilStationId_ = other.oilStationId_;
          onChanged();
        }
        if (!other.getOilFlowNumber().isEmpty()) {
          oilFlowNumber_ = other.oilFlowNumber_;
          onChanged();
        }
        if (!other.getTimestamp().isEmpty()) {
          timestamp_ = other.timestamp_;
          onChanged();
        }
        if (!other.getEventType().isEmpty()) {
          eventType_ = other.eventType_;
          onChanged();
        }
        if (!other.getTakeFaceOrNot().isEmpty()) {
          takeFaceOrNot_ = other.takeFaceOrNot_;
          onChanged();
        }
        if (!other.getEmployeeOrNot().isEmpty()) {
          employeeOrNot_ = other.employeeOrNot_;
          onChanged();
        }
        if (!other.getCashierHasPerson().isEmpty()) {
          cashierHasPerson_ = other.cashierHasPerson_;
          onChanged();
        }
        if (!other.getFaceImageUrl1().isEmpty()) {
          faceImageUrl1_ = other.faceImageUrl1_;
          onChanged();
        }
        if (!other.getFaceImageUrl2().isEmpty()) {
          faceImageUrl2_ = other.faceImageUrl2_;
          onChanged();
        }
        internalGetMutableAdditionalInfos().mergeFrom(
            other.internalGetAdditionalInfos());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PimpTicketOpen.TicketOpenPublish parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PimpTicketOpen.TicketOpenPublish) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object oilStationId_ = "";
      /**
       * <pre>
       *加油站ID
       * </pre>
       *
       * <code>string OilStationId = 1;</code>
       */
      public String getOilStationId() {
        Object ref = oilStationId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          oilStationId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *加油站ID
       * </pre>
       *
       * <code>string OilStationId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getOilStationIdBytes() {
        Object ref = oilStationId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          oilStationId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *加油站ID
       * </pre>
       *
       * <code>string OilStationId = 1;</code>
       */
      public Builder setOilStationId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        oilStationId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *加油站ID
       * </pre>
       *
       * <code>string OilStationId = 1;</code>
       */
      public Builder clearOilStationId() {

        oilStationId_ = getDefaultInstance().getOilStationId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *加油站ID
       * </pre>
       *
       * <code>string OilStationId = 1;</code>
       */
      public Builder setOilStationIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        oilStationId_ = value;
        onChanged();
        return this;
      }

      private Object oilFlowNumber_ = "";
      /**
       * <pre>
       *开票事件流水号
       * </pre>
       *
       * <code>string OilFlowNumber = 2;</code>
       */
      public String getOilFlowNumber() {
        Object ref = oilFlowNumber_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          oilFlowNumber_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *开票事件流水号
       * </pre>
       *
       * <code>string OilFlowNumber = 2;</code>
       */
      public com.google.protobuf.ByteString
          getOilFlowNumberBytes() {
        Object ref = oilFlowNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          oilFlowNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *开票事件流水号
       * </pre>
       *
       * <code>string OilFlowNumber = 2;</code>
       */
      public Builder setOilFlowNumber(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        oilFlowNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开票事件流水号
       * </pre>
       *
       * <code>string OilFlowNumber = 2;</code>
       */
      public Builder clearOilFlowNumber() {

        oilFlowNumber_ = getDefaultInstance().getOilFlowNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开票事件流水号
       * </pre>
       *
       * <code>string OilFlowNumber = 2;</code>
       */
      public Builder setOilFlowNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        oilFlowNumber_ = value;
        onChanged();
        return this;
      }

      private Object timestamp_ = "";
      /**
       * <pre>
       *事件时间
       * </pre>
       *
       * <code>string Timestamp = 3;</code>
       */
      public String getTimestamp() {
        Object ref = timestamp_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          timestamp_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *事件时间
       * </pre>
       *
       * <code>string Timestamp = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTimestampBytes() {
        Object ref = timestamp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          timestamp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *事件时间
       * </pre>
       *
       * <code>string Timestamp = 3;</code>
       */
      public Builder setTimestamp(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件时间
       * </pre>
       *
       * <code>string Timestamp = 3;</code>
       */
      public Builder clearTimestamp() {

        timestamp_ = getDefaultInstance().getTimestamp();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件时间
       * </pre>
       *
       * <code>string Timestamp = 3;</code>
       */
      public Builder setTimestampBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        timestamp_ = value;
        onChanged();
        return this;
      }

      private Object eventType_ = "";
      /**
       * <pre>
       *开票事件类型
       * </pre>
       *
       * <code>string EventType = 4;</code>
       */
      public String getEventType() {
        Object ref = eventType_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          eventType_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *开票事件类型
       * </pre>
       *
       * <code>string EventType = 4;</code>
       */
      public com.google.protobuf.ByteString
          getEventTypeBytes() {
        Object ref = eventType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          eventType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *开票事件类型
       * </pre>
       *
       * <code>string EventType = 4;</code>
       */
      public Builder setEventType(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        eventType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开票事件类型
       * </pre>
       *
       * <code>string EventType = 4;</code>
       */
      public Builder clearEventType() {

        eventType_ = getDefaultInstance().getEventType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开票事件类型
       * </pre>
       *
       * <code>string EventType = 4;</code>
       */
      public Builder setEventTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        eventType_ = value;
        onChanged();
        return this;
      }

      private Object takeFaceOrNot_ = "";
      /**
       * <pre>
       *是否有拍摄到人脸
       * </pre>
       *
       * <code>string TakeFaceOrNot = 5;</code>
       */
      public String getTakeFaceOrNot() {
        Object ref = takeFaceOrNot_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          takeFaceOrNot_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *是否有拍摄到人脸
       * </pre>
       *
       * <code>string TakeFaceOrNot = 5;</code>
       */
      public com.google.protobuf.ByteString
          getTakeFaceOrNotBytes() {
        Object ref = takeFaceOrNot_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          takeFaceOrNot_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *是否有拍摄到人脸
       * </pre>
       *
       * <code>string TakeFaceOrNot = 5;</code>
       */
      public Builder setTakeFaceOrNot(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        takeFaceOrNot_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否有拍摄到人脸
       * </pre>
       *
       * <code>string TakeFaceOrNot = 5;</code>
       */
      public Builder clearTakeFaceOrNot() {

        takeFaceOrNot_ = getDefaultInstance().getTakeFaceOrNot();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否有拍摄到人脸
       * </pre>
       *
       * <code>string TakeFaceOrNot = 5;</code>
       */
      public Builder setTakeFaceOrNotBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        takeFaceOrNot_ = value;
        onChanged();
        return this;
      }

      private Object employeeOrNot_ = "";
      /**
       * <pre>
       *是否是员工
       * </pre>
       *
       * <code>string EmployeeOrNot = 6;</code>
       */
      public String getEmployeeOrNot() {
        Object ref = employeeOrNot_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          employeeOrNot_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *是否是员工
       * </pre>
       *
       * <code>string EmployeeOrNot = 6;</code>
       */
      public com.google.protobuf.ByteString
          getEmployeeOrNotBytes() {
        Object ref = employeeOrNot_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          employeeOrNot_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *是否是员工
       * </pre>
       *
       * <code>string EmployeeOrNot = 6;</code>
       */
      public Builder setEmployeeOrNot(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        employeeOrNot_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否是员工
       * </pre>
       *
       * <code>string EmployeeOrNot = 6;</code>
       */
      public Builder clearEmployeeOrNot() {

        employeeOrNot_ = getDefaultInstance().getEmployeeOrNot();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否是员工
       * </pre>
       *
       * <code>string EmployeeOrNot = 6;</code>
       */
      public Builder setEmployeeOrNotBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        employeeOrNot_ = value;
        onChanged();
        return this;
      }

      private Object cashierHasPerson_ = "";
      /**
       * <pre>
       *收银区是否有人
       * </pre>
       *
       * <code>string CashierHasPerson = 7;</code>
       */
      public String getCashierHasPerson() {
        Object ref = cashierHasPerson_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          cashierHasPerson_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *收银区是否有人
       * </pre>
       *
       * <code>string CashierHasPerson = 7;</code>
       */
      public com.google.protobuf.ByteString
          getCashierHasPersonBytes() {
        Object ref = cashierHasPerson_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          cashierHasPerson_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *收银区是否有人
       * </pre>
       *
       * <code>string CashierHasPerson = 7;</code>
       */
      public Builder setCashierHasPerson(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        cashierHasPerson_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *收银区是否有人
       * </pre>
       *
       * <code>string CashierHasPerson = 7;</code>
       */
      public Builder clearCashierHasPerson() {

        cashierHasPerson_ = getDefaultInstance().getCashierHasPerson();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *收银区是否有人
       * </pre>
       *
       * <code>string CashierHasPerson = 7;</code>
       */
      public Builder setCashierHasPersonBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        cashierHasPerson_ = value;
        onChanged();
        return this;
      }

      private Object faceImageUrl1_ = "";
      /**
       * <pre>
       *图片链接1
       * </pre>
       *
       * <code>string FaceImageUrl1 = 8;</code>
       */
      public String getFaceImageUrl1() {
        Object ref = faceImageUrl1_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          faceImageUrl1_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *图片链接1
       * </pre>
       *
       * <code>string FaceImageUrl1 = 8;</code>
       */
      public com.google.protobuf.ByteString
          getFaceImageUrl1Bytes() {
        Object ref = faceImageUrl1_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          faceImageUrl1_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *图片链接1
       * </pre>
       *
       * <code>string FaceImageUrl1 = 8;</code>
       */
      public Builder setFaceImageUrl1(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        faceImageUrl1_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *图片链接1
       * </pre>
       *
       * <code>string FaceImageUrl1 = 8;</code>
       */
      public Builder clearFaceImageUrl1() {

        faceImageUrl1_ = getDefaultInstance().getFaceImageUrl1();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *图片链接1
       * </pre>
       *
       * <code>string FaceImageUrl1 = 8;</code>
       */
      public Builder setFaceImageUrl1Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        faceImageUrl1_ = value;
        onChanged();
        return this;
      }

      private Object faceImageUrl2_ = "";
      /**
       * <pre>
       *图片链接2
       * </pre>
       *
       * <code>string FaceImageUrl2 = 9;</code>
       */
      public String getFaceImageUrl2() {
        Object ref = faceImageUrl2_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          faceImageUrl2_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *图片链接2
       * </pre>
       *
       * <code>string FaceImageUrl2 = 9;</code>
       */
      public com.google.protobuf.ByteString
          getFaceImageUrl2Bytes() {
        Object ref = faceImageUrl2_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          faceImageUrl2_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *图片链接2
       * </pre>
       *
       * <code>string FaceImageUrl2 = 9;</code>
       */
      public Builder setFaceImageUrl2(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        faceImageUrl2_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *图片链接2
       * </pre>
       *
       * <code>string FaceImageUrl2 = 9;</code>
       */
      public Builder clearFaceImageUrl2() {

        faceImageUrl2_ = getDefaultInstance().getFaceImageUrl2();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *图片链接2
       * </pre>
       *
       * <code>string FaceImageUrl2 = 9;</code>
       */
      public Builder setFaceImageUrl2Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        faceImageUrl2_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          String, String> additionalInfos_;
      private com.google.protobuf.MapField<String, String>
      internalGetAdditionalInfos() {
        if (additionalInfos_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              AdditionalInfosDefaultEntryHolder.defaultEntry);
        }
        return additionalInfos_;
      }
      private com.google.protobuf.MapField<String, String>
      internalGetMutableAdditionalInfos() {
        onChanged();;
        if (additionalInfos_ == null) {
          additionalInfos_ = com.google.protobuf.MapField.newMapField(
              AdditionalInfosDefaultEntryHolder.defaultEntry);
        }
        if (!additionalInfos_.isMutable()) {
          additionalInfos_ = additionalInfos_.copy();
        }
        return additionalInfos_;
      }

      public int getAdditionalInfosCount() {
        return internalGetAdditionalInfos().getMap().size();
      }
      /**
       * <pre>
       *附加信息
       * </pre>
       *
       * <code>map&lt;string, string&gt; AdditionalInfos = 10;</code>
       */

      public boolean containsAdditionalInfos(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        return internalGetAdditionalInfos().getMap().containsKey(key);
      }
      /**
       * Use {@link #getAdditionalInfosMap()} instead.
       */
      @Deprecated
      public java.util.Map<String, String> getAdditionalInfos() {
        return getAdditionalInfosMap();
      }
      /**
       * <pre>
       *附加信息
       * </pre>
       *
       * <code>map&lt;string, string&gt; AdditionalInfos = 10;</code>
       */

      public java.util.Map<String, String> getAdditionalInfosMap() {
        return internalGetAdditionalInfos().getMap();
      }
      /**
       * <pre>
       *附加信息
       * </pre>
       *
       * <code>map&lt;string, string&gt; AdditionalInfos = 10;</code>
       */

      public String getAdditionalInfosOrDefault(
          String key,
          String defaultValue) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, String> map =
            internalGetAdditionalInfos().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *附加信息
       * </pre>
       *
       * <code>map&lt;string, string&gt; AdditionalInfos = 10;</code>
       */

      public String getAdditionalInfosOrThrow(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, String> map =
            internalGetAdditionalInfos().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearAdditionalInfos() {
        internalGetMutableAdditionalInfos().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *附加信息
       * </pre>
       *
       * <code>map&lt;string, string&gt; AdditionalInfos = 10;</code>
       */

      public Builder removeAdditionalInfos(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        internalGetMutableAdditionalInfos().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<String, String>
      getMutableAdditionalInfos() {
        return internalGetMutableAdditionalInfos().getMutableMap();
      }
      /**
       * <pre>
       *附加信息
       * </pre>
       *
       * <code>map&lt;string, string&gt; AdditionalInfos = 10;</code>
       */
      public Builder putAdditionalInfos(
          String key,
          String value) {
        if (key == null) { throw new NullPointerException(); }
        if (value == null) { throw new NullPointerException(); }
        internalGetMutableAdditionalInfos().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *附加信息
       * </pre>
       *
       * <code>map&lt;string, string&gt; AdditionalInfos = 10;</code>
       */

      public Builder putAllAdditionalInfos(
          java.util.Map<String, String> values) {
        internalGetMutableAdditionalInfos().getMutableMap()
            .putAll(values);
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:dg.model.TicketOpenPublish)
    }

    // @@protoc_insertion_point(class_scope:dg.model.TicketOpenPublish)
    private static final PimpTicketOpen.TicketOpenPublish DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PimpTicketOpen.TicketOpenPublish();
    }

    public static PimpTicketOpen.TicketOpenPublish getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TicketOpenPublish>
        PARSER = new com.google.protobuf.AbstractParser<TicketOpenPublish>() {
      @Override
      public TicketOpenPublish parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TicketOpenPublish(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TicketOpenPublish> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<TicketOpenPublish> getParserForType() {
      return PARSER;
    }

    @Override
    public PimpTicketOpen.TicketOpenPublish getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_TicketOpen_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_TicketOpen_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_TicketOpen_AdditionalInfosEntry_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_TicketOpen_AdditionalInfosEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_TicketOpenPublish_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_TicketOpenPublish_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dg_model_TicketOpenPublish_AdditionalInfosEntry_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dg_model_TicketOpenPublish_AdditionalInfosEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\024pimpTicketOpen.proto\022\010dg.model\"\213\002\n\nTic" +
      "ketOpen\022\024\n\014OilStationId\030\001 \001(\t\022\017\n\007EventId" +
      "\030\002 \001(\t\022\021\n\tTimestamp\030\003 \001(\t\0220\n\tEventType\030\004" +
      " \001(\0162\035.dg.model.TicketOpenEventType\022\025\n\rO" +
      "ilFlowNumber\030\005 \001(\t\022B\n\017AdditionalInfos\030\006 " +
      "\003(\0132).dg.model.TicketOpen.AdditionalInfo" +
      "sEntry\0326\n\024AdditionalInfosEntry\022\013\n\003key\030\001 " +
      "\001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\337\002\n\021TicketOpenPub" +
      "lish\022\024\n\014OilStationId\030\001 \001(\t\022\025\n\rOilFlowNum" +
      "ber\030\002 \001(\t\022\021\n\tTimestamp\030\003 \001(\t\022\021\n\tEventTyp" +
      "e\030\004 \001(\t\022\025\n\rTakeFaceOrNot\030\005 \001(\t\022\025\n\rEmploy" +
      "eeOrNot\030\006 \001(\t\022\030\n\020CashierHasPerson\030\007 \001(\t\022" +
      "\025\n\rFaceImageUrl1\030\010 \001(\t\022\025\n\rFaceImageUrl2\030" +
      "\t \001(\t\022I\n\017AdditionalInfos\030\n \003(\01320.dg.mode" +
      "l.TicketOpenPublish.AdditionalInfosEntry" +
      "\0326\n\024AdditionalInfosEntry\022\013\n\003key\030\001 \001(\t\022\r\n" +
      "\005value\030\002 \001(\t:\0028\001*\346\002\n\023TicketOpenEventType" +
      "\022\"\n\036Ticket_Open_Event_Type_Unknown\020\000\022\034\n\030" +
      "Ticket_Open_Event_Type_1\020\001\022\034\n\030Ticket_Ope" +
      "n_Event_Type_2\020\002\022\034\n\030Ticket_Open_Event_Ty" +
      "pe_3\020\003\022\034\n\030Ticket_Open_Event_Type_4\020\004\022\034\n\030" +
      "Ticket_Open_Event_Type_5\020\005\022\034\n\030Ticket_Ope" +
      "n_Event_Type_6\020\006\022\034\n\030Ticket_Open_Event_Ty" +
      "pe_7\020\007\022\034\n\030Ticket_Open_Event_Type_8\020\010\022\034\n\030" +
      "Ticket_Open_Event_Type_9\020\t\022\035\n\031Ticket_Ope" +
      "n_Event_Type_10\020\nb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_dg_model_TicketOpen_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dg_model_TicketOpen_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_TicketOpen_descriptor,
        new String[] { "OilStationId", "EventId", "Timestamp", "EventType", "OilFlowNumber", "AdditionalInfos", });
    internal_static_dg_model_TicketOpen_AdditionalInfosEntry_descriptor =
      internal_static_dg_model_TicketOpen_descriptor.getNestedTypes().get(0);
    internal_static_dg_model_TicketOpen_AdditionalInfosEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_TicketOpen_AdditionalInfosEntry_descriptor,
        new String[] { "Key", "Value", });
    internal_static_dg_model_TicketOpenPublish_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dg_model_TicketOpenPublish_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_TicketOpenPublish_descriptor,
        new String[] { "OilStationId", "OilFlowNumber", "Timestamp", "EventType", "TakeFaceOrNot", "EmployeeOrNot", "CashierHasPerson", "FaceImageUrl1", "FaceImageUrl2", "AdditionalInfos", });
    internal_static_dg_model_TicketOpenPublish_AdditionalInfosEntry_descriptor =
      internal_static_dg_model_TicketOpenPublish_descriptor.getNestedTypes().get(0);
    internal_static_dg_model_TicketOpenPublish_AdditionalInfosEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dg_model_TicketOpenPublish_AdditionalInfosEntry_descriptor,
        new String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
